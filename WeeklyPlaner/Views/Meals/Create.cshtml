@model WeeklyPlaner.ViewModels.MealViewModel

@{
    ViewBag.Title = "Vnesi obrok";
}

<div id="meal">
    <h2>Vnesi obrok</h2>

    <div id="error"></div>

    @using (Html.BeginForm())
    {
        <section class="meal_title">
            <div class="row">
                <div class="col-md-12">
                    <span>Ime obroka</span>
                    <input type="text" id="title" class="form-control" />
                    <span class="error">Prosim vnesi ime obroka</span>
                </div>
            </div>
        </section>
        <section class="meal_courses">
            <div class="row">
                @Html.EditorFor(x => x.Courses)
            </div>
        </section>
        <section class="meal_Items">
            <div class="row">
                <div class="col-md-12">
                    <h4>Sestavine</h4>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-6">
                            <span>Količina</span>
                            <input type="text" id="quantity" class="form-control" />
                            <span class="error">Prosim vnesi količino</span>
                        </div>
                        <div class="col-md-6">
                            <span>Enota</span>
                            <input type="hidden" id="unitId" />
                            <input type="text" id="unit" class="form-control unit_autocomplete" />
                            <span class="error">Prosim vnesi enoto</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <span>Sestavina</span>
                            <input type="hidden" id="ItemId" />
                            <input type="text" id="Item" class="form-control Item_autocomplete" />
                            <span class="error">Prosim vnesi sestavino</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <input type="button" id="add" value="Dodaj" class="btn btn-info" />
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="Items">
                        <div class="row">
                            <div class="col-md-4">Količina</div>
                            <div class="col-md-4">Enota</div>
                            <div class="col-md-4">Sestavina</div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div id="orderItems" class="tablecontainer"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <section class="button_wrapper">
            <div class="row">
                <div class="col-md-12">
                    <input id="submit" type="button" value="Shrani" class="btn btn-default" />
                </div>
            </div>
        </section>
    }
    <section class="footer">
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </section>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    <script>
        $(document).ready(function () {
            var orderItems = [];
            var courses = [];
            //Add button click function
            $('#add').click(function () {
                //Check validation of order item
                var isValidItem = true;
                if ($('#Item').val().trim() == '') {
                    isValidItem = false;
                    $('#Item').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#Item').siblings('span.error').css('visibility', 'hidden');
                }

                if (!($('#quantity').val().trim() != '' && !isNaN($('#quantity').val().trim()))) {
                    isValidItem = false;
                    $('#quantity').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#quantity').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#unit').val().trim() == '') {
                    isValidItem = false;
                    $('#unit').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#unit').siblings('span.error').css('visibility', 'hidden');
                }

                //Add item to list if valid
                if (isValidItem) {                    

                    orderItems.push({                        
                        Quantity: parseInt($('#quantity').val().trim()),
                        UnitId: $('#unitId').val().trim(),
                        Unit: $('#unit').val().trim(),
                        ItemId: $('#ItemId').val().trim(),
                        Item: $('#Item').val().trim()
                    });

                    //Clear fields
                    $('#quantity').val('').focus();
                    $('#unitId, #unit, #ItemId, #Item').val('');

                    $('#error').html('');
                }
                //populate order items
                GeneratedItemsTable();

            });
            //Save button click function
            $('#submit').click(function () {
                //validation of order
                var isAllValid = true;
                if (orderItems.length == 0) {
                    $('#orderItems').html('<span style="color:red;">Vnesi sestavine obroka</span>');
                    isAllValid = false;
                }

                if ($('#title').val().trim() == '') {
                    $('#title').siblings('span.error').css('visibility', 'visible');
                    isAllValid = false;
                }
                else {
                    $('#title').siblings('span.error').css('visibility', 'hidden');
                }

                //Save if valid
                if (isAllValid) {

                    $('input:checkbox.course').each(function () {
                        courses.push({
                            CourseID: $(this).prev('input[type=hidden]').val(),
                            Title: '',
                            Assigned: this.checked
                        });
                    });                    

                    var data = {                        
                        Title: $('#title').val().trim(),
                        Courses: courses,
                        MealItems: orderItems
                    }

                    $(this).val('Prosimo počakajte...');

                    $.ajax({
                        url: '/Meals/Create',
                        type: "POST",
                        data: JSON.stringify(data),
                        dataType: "JSON",
                        contentType: "application/json",
                        success: function (d) {
                            //check is successfully save to database
                            if (d.status == true) {
                                //will send status from server side                                

                                //clear form
                                orderItems = [];
                                $('#title').val('');
                                $('#orderItems').empty();
                                $('#error').append($('<div class="alert alert-info" />').html("Obrok je uspešno shranjen"));
                                $('input:checkbox.course').each(function () {
                                    $(this).attr('checked', false);
                                });
                            }
                            else {
                                $('#error').append($('<div class="alert alert-danger" />').html("Prišlo je do napake pri vnosu obroka!"));
                            }
                            $('#submit').val('Shrani');
                        },
                        error: function () {
                            $('#error').append($('<div class="alert alert-danger" />').html("Prišlo je do napake pri povezavi! Prosim poizkusite znova"));
                            $('#submit').val('Shrani');
                        }
                    });
                }

            });
            //function for show added items in table
            function GeneratedItemsTable() {
                if (orderItems.length > 0) {
                    var $items = $('<div class="row" />');
                    $.each(orderItems, function (i, val) {
                        $items.append($('<div class="col-md-4" />').html(val.Quantity));
                        $items.append($('<div class="col-md-4" />').html('<input type="hidden" value="' + val.UnitId + '">' + '<span>' + val.Unit + '</span>'));
                        $items.append($('<div class="col-md-4" />').html('<input type="hidden" value="' + val.ItemId + '">' + '<span>' + val.Item + '</span>'));
                    });
                    $('#orderItems').html($items);
                }
            }

            /* Item autocomplete */
            $('.Item_autocomplete').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@(Url.Action("AutocompleteItems", "Items"))",
                        type: "POST",
                        dataType: "json",
                        data: { "searchString": request.term },
                        success: function (data) {
                            response(data)
                        }
                    });
                },
                autoFocus: 1,
                minLength: 1,
                messages: { noResults: "", results: function () { } },
                select: function (request, response) {
                    $("#ItemId").val(response.item.id);
                }
            });

            $('.unit_autocomplete').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@(Url.Action("AutocompleteUnits", "Items"))",
                        type: "POST",
                        dataType: "json",
                        data: { "searchString": request.term },
                        success: function (data) {
                            response(data)
                        }
                    });
                },
                autoFocus: 1,
                minLength: 1,
                message: { noResults: "", results: function () { } },
                select: function (request, response) {
                    $("#unitId").val(response.item.id);
                }
            });
        });
    </script>
}